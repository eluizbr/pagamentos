// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DocumentType {
  CPF
  CNPJ
}

enum UserType {
  PF
  PJ
}

enum TokenType {
  Developer
  Production
}

model User {
  id            String      @id @default(uuid()) @db.VarChar(255)
  username      String      @unique @db.VarChar(255)
  email         String      @unique @db.VarChar(255)
  password      String      @db.VarChar(255)
  created_at    DateTime?   @default(now())
  updated_at    DateTime?   @updatedAt
  profiles       Profile[]

}
model Profile {
  user            User[]          @relation( fields: [userId], references: [id],onDelete: Cascade)
  userId          String?         @db.VarChar(255)
  id              String          @id @default(uuid()) @db.VarChar(255)
  name            String          @db.VarChar(255)
  email           String          @unique @db.VarChar(255)
  document        String          @unique @db.VarChar(255)
  document_type   DocumentType 
  user_type       UserType
  phone           String          @db.VarChar(100)
  street          String          @db.VarChar(255)
  street_number   String          @db.VarChar(255)
  complementary   String          @db.VarChar(255)
  neighborhood    String          @db.VarChar(255)
  city            String          @db.VarChar(255)
  state           String          @db.VarChar(255)
  zipcode         String          @db.VarChar(8)
  country         String          @default("BR")   @db.VarChar(255)
  created_at      DateTime?       @default(now())
  updated_at      DateTime?       @updatedAt
  token Token[]

  @@index([name, userId])
}

model Token {
  profile         Profile[]         @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId       String?           @db.VarChar(255)
  id              String            @id @default(uuid()) @db.VarChar(255)
  type            TokenType
  token           String?           @unique @db.VarChar(255)
  client_id       String            @unique @default(cuid()) @db.VarChar(255)
  is_active       Boolean           @default(true)
  created_at      DateTime?         @default(now())
  updated_at      DateTime?         @updatedAt
  expires_in      DateTime?         @updatedAt

 @@index([profileId])
}